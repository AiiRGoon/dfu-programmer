name: Build dfu-programmer

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

on:
  push:
  pull_request:

jobs:
  Windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: C:/msys64/usr/bin/bash.exe --noprofile --norc -e -x -o pipefail {0}

    steps:
      - uses: actions/checkout@v3

      - name: Dependencies, bootstrap, configure, and make
        run: |
          export PATH=/usr/bin:/mingw32/bin:/usr/local/bin

          pacman --noconfirm -S automake-wrapper autoconf-wrapper make mingw-w64-i686-gcc

          ./bootstrap.sh 2>&1

          cp windows/usb.h /mingw32/include/
          cp windows/libusb.a /mingw32/lib/

          ./configure --disable-libusb_1_0

          make

      - name: Upload dfu-programmer.exe
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dfu-programmer.exe binary for Windows x64
          path: src/dfu-programmer.exe

      - name: Download Atmel FLIP
        uses: suisei-cn/actions-download-file@v1.0.1
        id: flip
        with:
          url: https://ww1.microchip.com/downloads/en/DeviceDoc/Flip%20Installer%20-%203.4.7.112.exe

      - name: Extract Atmel FLIP
        run: 7z x ${{ steps.flip.outputs.filename }} usb COPYING_GPL.txt
        shell: pwsh
      
      - name: Test
        run: |
          cp usb/x86/libusb0_x86.dll src/libusb0.dll
          src/dfu-programmer.exe --version
          src/dfu-programmer.exe --help
      
      - name: Prep dist
        run: |
          mkdir dist
          mv COPYING_GPL.txt usb/
          mv usb dist/
          cp src/dfu-programmer.exe dist/
          cp docs/dfu-programmer.html dist/

      - name: make dist
        run: |
          export PATH=/usr/bin:/mingw32/bin:/usr/local/bin
          make dist

      - name: Upload .zip
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dfu-programmer for Windows
          path: dist

      - name: Run with bash
        run: |
          export PATH=/usr/bin:/mingw32/bin:/usr/local/bin
          src/dfu-programmer.exe --help

  Linux:
    runs-on: ubuntu-latest

    steps:
      - run: sudo apt-get install -y libusb-dev

      - uses: actions/checkout@v3

      - name: bootstrap
        run: ./bootstrap.sh

      - name: configure
        run: ./configure

      - name: make
        run: make

      - run: src/dfu-programmer --help

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dfu-programmer binary for Linux x64
          path: src/dfu-programmer

      - name: make dist
        run: make dist

      - name: Upload tarball
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dfu-programmer for Linux
          path: "*.tar.gz"

  macOS:
    runs-on: macos-latest

    steps:
      - run: brew install automake

      - uses: actions/checkout@v3

      - name: bootstrap
        run: ./bootstrap.sh

      - name: configure
        run: ./configure

      - name: make
        run: make

      - run: src/dfu-programmer --help

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dfu-programmer binary for macOS Universal
          path: src/dfu-programmer

      - name: make dist
        run: make dist

      - name: Upload tarball
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dfu-programmer for macOS
          path: "*.tar.gz"
